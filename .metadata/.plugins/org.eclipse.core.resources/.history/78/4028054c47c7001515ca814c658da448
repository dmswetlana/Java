package ru.spec.java1.lec2;

public class Palindrom {

	long value;

	public static void main(String... args) {

		System.out.println(isPalindrom(255, 16));

		int radix1 = 16;
		int radix2 = 7;

		findPalindroms(radix1, radix2);

	}

	private static void findPalindroms(int... radixs) {
		for (long i = 0; i < 1_000_000_000_000L; i++) {
			boolean tmp = true;
			for (int r : radixs) {
				if (!isPalindrom(i, r)) {
					tmp = false;
					break;
				}

			}
			if (tmp) {
				for (int r : radixs) {
					System.out.print(Long.toString(i, r) + "(" + "r" + "); ");
				}
				System.out.println();
			}
			// if(isPalindrom(i,radix1) && isPalindrom(i,radix2) ){
			// System.out.println(i+"(10); "
			// + Long.toString(i, radix1)
			// + "("
			// + radix1
			// + "); "
			// + Long.toString(i, radix2)
			// + "("
			// + radix2
			// + "); ");
			// }
		}
	}

	public static boolean isPalindrom(long value, int ragix) {
		return isPalindrom(Long.toString(value, ragix));
	}

	public static boolean isPalindrom(String src) {
		if (src == null)
			return false;

		int maxLength = src.length() - 1;
		int halfLength = src.length() / 2;

		for (int i = 0; i < halfLength; i++) {// alt+shift+L to create local var
			if (src.charAt(i) != src.charAt(maxLength - i))
				return false;
		}
		return true;
	}

}
